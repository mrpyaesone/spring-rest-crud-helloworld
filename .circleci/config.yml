--- 
jobs: 
  build: 
    docker: 
      - image: circleci/mysql:8.0.4
        auth:
          username: $DOCKER_REPO_USERNAME
          password: $DOCKER_REPO_PASSWORD
        environment:
          MYSQL_ROOT_PASSWORD:  
          MYSQL_DATABASE: crud_rest_helloworld
          MYSQL_USER: root
          MYSQL_PASSWORD: 
    steps:
      - checkout
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u root -p   crud_rest_helloworld < sql-data/crud_rest_helloworld.sql
            mysql -h 127.0.0.1 -u root -p   --execute="SELECT * FROM crud_rest_helloworld.test"

      - 
        image: "circleci/openjdk:8-jdk-browsers"
    steps: 
      - checkout
      - setup_remote_docker
      - 
        restore_cache: 
          key: "spring-rest-crud-helloworld-{{ checksum \"pom.xml\" }}"
      - 
        run: "mvn dependency:go-offline"
      - 
        save_cache: 
          key: "spring-rest-crud-helloworld-{{ checksum \"pom.xml\" }}"
          paths: 
            - ~/.m2
      - 
        run: 
          command: "if mvn -q -Dexec.executable=\"echo\" -Dexec.args='${project.version}' --non-recursive exec:exec | grep -q \"SNAPSHOT\"; then mvn versions:set -DremoveSnapshot; fi;\n\
              echo $(mvn -q -Dexec.executable=\"echo\" -Dexec.args='${project.version}' --non-recursive exec:exec)-$(echo $CIRCLE_SHA1 | cut -c -7)-$CIRCLE_BUILD_NUM > tempvers.txt\n\
              mvn versions:set -DnewVersion=$(cat tempvers.txt) \n"
          name: "remove snapshot version"
      - 
        run: "mvn package"
      - 
        run: 
          command: |
              cp target/*.jar docker/apps/
              docker login -u $DOCKER_REPO_USERNAME -p $DOCKER_REPO_PASSWORD
              docker build --no-cache -t mrpyaesone25/spring-rest-crud-helloworld:$(cat tempvers.txt) docker
              docker push mrpyaesone25/spring-rest-crud-helloworld:$(cat tempvers.txt)
          name: "Build application Docker image"
    working_directory: ~/spring-rest-crud-helloworld
version: 2